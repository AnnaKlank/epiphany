---
# Please look at assertions in preflight_facts role.

- when: promote_to_ha
  import_tasks: gather-facts.yml

- when: promote_to_ha and (not kubernetes_promote.kubernetes_already_ha)
  block:
    - name: Collect kubeadm-config
      shell: |
        kubectl get configmap kubeadm-config \
          --namespace kube-system \
          --output jsonpath={{ jsonpath }}
      vars:
        jsonpath: >-
          '{.data.ClusterConfiguration}'
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      args:
        executable: /bin/bash
      register: kubeadm_config
      changed_when: false

    - name: Extend kubeadm config
      set_fact:
        kubeadm_config: >-
          {{ original | combine(update, recursive=true) }}
      vars:
        original: >-
          {{ kubeadm_config.stdout | from_yaml }}
        update:
          controlPlaneEndpoint: localhost:3446
          apiServer:
            certSANs:
              - localhost
              - 127.0.0.1
              - "{{ ansible_host }}"

    - name: Render /etc/kubeadm/kubeadm-config.yml
      copy:
        dest: /etc/kubeadm/kubeadm-config.yml
        content: >-
          {{ kubeadm_config | to_nice_yaml }}

    - name: Backup and generate apiserver certificates
      include_role:
        name: kubernetes_apiserver_certificates

    - name: Update in-cluster configuration
      shell: |
        kubeadm init phase upload-config kubeadm \
          --config /etc/kubeadm/kubeadm-config.yml
      args:
        executable: /bin/bash
      register: upload_config
      until: upload_config is succeeded
      retries: 30
      delay: 10

    - name: Update /etc/kubernetes/{controller-manager,scheduler,admin}.conf
      replace:
        path: "/etc/kubernetes/{{ item }}"
        regexp: "server: .*$"
        replace: "server: {{ server }}"
      vars:
        server: https://localhost:3446
      loop:
        - controller-manager.conf
        - scheduler.conf
        - admin.conf
      notify:
        - Restart controller-manager
        - Restart scheduler

    - meta: flush_handlers

    - name: Get kube-proxy config map
      shell: |
        kubectl get configmap kube-proxy \
          --namespace kube-system \
          --output yaml \
        | sed 's|server: .*$|server: {{ server }}|' \
        | kubectl apply \
          --namespace kube-system \
          -f-
      vars:
        server: https://localhost:3446
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      args:
        executable: /bin/bash

    - name: Get cluster-info config map
      shell: |
        kubectl get configmap cluster-info \
          --namespace kube-public \
          --output yaml \
        | sed 's|server: .*$|server: {{ server }}|' \
        | kubectl apply \
          --namespace kube-public \
          -f-
      vars:
        server: https://localhost:3446
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      args:
        executable: /bin/bash
